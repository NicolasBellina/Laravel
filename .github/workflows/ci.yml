name: CI

on:
  push:
    branches:
      - main

jobs:
  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      # 1. Vérifier le code source
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Configurer PHP pour exécuter Laravel
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'  # Utilise la version de PHP nécessaire à ton projet
          extensions: mbstring, xml, bcmath, zip, curl, gd, opcache

      # 3. Installer les dépendances PHP avec Composer
      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-interaction

      # 4. Copier le fichier .env et générer la clé de l'application
      - name: Set up .env and generate app key
        run: |
          cp .env.example .env
          php artisan key:generate

      # 5. Effectuer les migrations (si nécessaire)
      - name: Run migrations
        run: |
          php artisan migrate --force

      # 6. Cache les configurations et les routes
      - name: Cache config and routes
        run: |
          php artisan config:cache
          php artisan route:cache

      # 7. Tester le projet
      - name: Run tests
        run: |
          ./vendor/bin/phpunit --configuration phpunit.xml

      # 8. Pousser les fichiers vers le serveur
      - name: Push to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd ${{ secrets.PROJECT_PATH }}  # Chemin du projet sur le serveur
            git pull origin main  # Met à jour le code sur le serveur
            composer install --prefer-dist --no-interaction  # Installe les dépendances sur le serveur
            php artisan migrate --force  # Applique les migrations
            php artisan config:cache  # Met en cache les configurations
            php artisan route:cache  # Met en cache les routes
            php artisan queue:restart  # Redémarre les queues (si applicable)
